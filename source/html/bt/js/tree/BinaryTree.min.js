Ext.define("MJ.BinaryTreeInfo",{getRoot:function(){},getLeft:function(a){},getRight:function(a){},getString:function(a){}});Ext.define("MJ.BinaryTree",{config:{size:0,root:null,elements:null},constructor:function(a){this.initConfig(a)},add:function(b,f,e){if(!b){return}var c=null;if(!this.root){c=this.root=new MJ.BinaryTree.Node({element:b});this.size=1}else{c=this._node(b)}if(!c){return}if(f){var d=c.left;c.left=new MJ.BinaryTree.Node({element:f,parent:c});if(!d){this.size++}else{c.left.left=d.left;c.left.right=d.right}}if(e){var a=c.right;c.right=new MJ.BinaryTree.Node({element:e,parent:c});if(!a){this.size++}else{c.right.left=a.left;c.right.right=a.right}}},_node:function(b){if(!b||!this.root){return null}var a=[];a.push(this.root);while(a.length>0){var c=a.shift();if(MJ.Comparator.compare(c.element,b)===0){return c}if(c.left){a.push(c.left)}if(c.right){a.push(c.right)}}},remove:function(a){var d=this._node(a);if(!d){return}this.size--;if(d.left&&d.right){var c=this.successor(d);d.element=c.element;d=c}var b=d.left?d.left:d.right;if(b){b.parent=d.parent;var e=false;if(!d.parent){this.root=b}else{if(d.parent.left===d){d.parent.left=b;e=true}else{d.parent.right=b}}this.afterRemove_(b);d.left=d.right=d.parent=null}else{if(!d.parent){this.root=null;this.afterRemove_(d)}else{var e=false;if(d===d.parent.left){d.parent.left=null;e=true}else{d.parent.right=null}this.afterRemove_(d);d.parent=null}}},afterRemove_:function(a){},createNode:function(a,b){return new MJ.BinaryTree.Node({element:a,parent:b})},preorderNodes:function(){if(this.size===0){return null}var a=[];this._preorderNodes(this.root,a);return a},_preorderNodes:function(b,a){if(!b){return}a.push(b);console.log(b);this._preorderNodes(b.left,a);this._preorderNodes(b.right,a)},preorderElements:function(){if(this.size===0){return null}var a=[];this._preorderElements(this.root,a);return a},_preorderElements:function(b,a){if(!b){return}a.push(b.element);this._preorderElements(b.left,a);this._preorderElements(b.right,a)},inorderElements:function(){if(this.size===0){return null}var a=[];this._inorderElements(this.root,a);return a},_inorderElements:function(b,a){if(!b){return}this._inorderElements(b.left,a);a.push(b.element);this._inorderElements(b.right,a)},postorderElements:function(){if(this.size===0){return null}var a=[];this._postorderElements(this.root,a);return a},_postorderElements:function(b,a){if(!b){return}this._postorderElements(b.left,a);this._postorderElements(b.right,a);a.push(b.element)},levelOrderElements:function(){if(this.size===0){return null}var b=[];var a=[];a.push(this.root);while(a.length>0){var c=a.shift();b.push(c.element);if(c.left){a.push(c.left)}if(c.right){a.push(c.right)}}return b},getLeft:function(a){return a.left},getRight:function(a){return a.right},getString:function(a){return a.toString()},clear:function(){this.size=0;this.elements=null;this.root=null},predecessor:function(a){if(!a){return null}if(a.left){var b=a.left;while(b.right){b=b.right}return b}while(a.parent&&a===a.parent.left){a=a.parent}return a.parent},successor:function(b){if(!b){return null}if(b.right){var a=b.right;while(a.left){a=a.left}return a}while(b.parent&&b===b.parent.right){b=b.parent}return b.parent}});Ext.define("MJ.BinaryTree.Node",{config:{left:null,right:null,parent:null,element:null,height:1},constructor:function(a){this.initConfig(a)},toString:function(){return this.element.toString()},isLeaf:function(){return !this.left&&!this.right},hasTwoChildren:function(){return this.left&&this.right},isLeftChild:function(){return this.parent&&this===this.parent.left},isRightChild:function(){return this.parent&&this===this.parent.right},tallerChild:function(){var a=this.left?this.left.height:0;var b=this.right?this.right.height:0;if(a>b){return this.left}if(b>a){return this.right}return this.isLeftChild()?this.left:this.right},sibling:function(){if(this.isLeftChild()){return this.parent.right}if(this.isRightChild()){return this.parent.left}return null},uncle:function(){return this.parent?this.parent.sibling():null}});