function example1(){var d=new MJ.BinarySearchTree();var b=Math.floor(1+Math.random()*50);for(var a=0;a<b;a++){d.add(Math.floor(Math.random()*1000))}var c=new MJ.Graph({tree:d});c.display()}function example2(){var a=new MJ.Graph();a.tree={getRoot:function(){return"Life"},getLeft:function(b){if(b==="Life"){return"Animal"}if(b==="Person"){return"Man"}if(b==="Animal"){return"Cat"}if(b==="Dog"){return"Teddy"}return null},getRight:function(b){if(b==="Life"){return"Person"}if(b==="Person"){return"Woman"}if(b==="Animal"){return"Dog"}if(b==="Dog"){return"SingleDog"}return null},getString:function(b){return b}};a.display()}Ext.define("MJ.Person",{config:{age:0,name:null},constructor:function(a){this.initConfig(a)},compareTo:function(b){var a=this.age-b.age;if(a===0){a=(this.name>b.name)?1:(this.name<b.name?-1:0)}return a},toString:function(){return this.age+"_"+this.name}});function _addPersons(a){a.add(new MJ.Person({age:14,name:"Jake"}));a.add(new MJ.Person({age:10,name:"Michael"}));a.add(new MJ.Person({age:17,name:"Jim"}));a.add(new MJ.Person({age:24,name:"Kate"}));a.add(new MJ.Person({age:25,name:"Larry"}));a.add(new MJ.Person({age:28,name:"Michael"}));a.add(new MJ.Person({age:16,name:"Jackson"}));a.add(new MJ.Person({age:24,name:"Angela"}));a.add(new MJ.Person({age:17,name:"Rona"}));a.add(new MJ.Person({age:30,name:"Jim"}))}function example3(){var a=new MJ.BinarySearchTree();_addPersons(a);new MJ.Graph({tree:a}).display()}function example4(){var b=new MJ.BinarySearchTree({comparator:{compare:function(e,d){var c=(e.name>d.name)?1:(e.name<d.name?-1:0);if(c===0){c=e.age-d.age}return c}}});_addPersons(b);var a=new MJ.Graph();a.tree=b;a.display()};